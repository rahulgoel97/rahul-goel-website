The Art of Doing Science & Engineering 
Learning to Learn
By Richard H Hamming.

---------------------------------------------------------------------
!!! Indicates really interesting and unique insights, recommended to read, with my personal commentary on why it is important.
---------------------------------------------------------------------

Intro, Chapter 1-3 
- Notes to be added.
- Thought of this idea while on chapter 3.

Chapter 3 - History of computers - hardware

- Interesting notes on scratches on old bones connected to astronomy.
- Never thought Babbage was the father of modern computing.
- 1935 - IBM mechanical punch could do multiplications and include two additions to the product. Used in Atomic bombs.
- 1939 - George Stibitz build Complex Number Computer. 
- 1946 - ENIAC built by US Army - 18K vacuum tubes, used to compute ballistic trajectories. Same year, Mauchly and Eckert gave a course open to all on how to design and build computers.
- 1952 - MANIAC-I 
- 1955 - MANIAC-II

!!! A lot of above possible due to government funding for military use-cases. This is important in 2022 due to the debates around government funding for science and the creation of a DARPA like agency for health.


- Computer process = 1. Get address in CAR, 2. Go to address and get instruction, 3. Execute instruction, 4. Add to CAR address and repeat.


Chapter 4 - History of computers - software
- FORTRAN = FORmula TRANslation
- FORTRAN "was opposed by almost all programmers. First, it was said it could not be done. Second, if it could be done, it would be too wasteful of machine time and capacity". 

!!! The abovepassage is enormously exciting. Yet another example on how the best ideas are always counterintuitive and opposed to the zeitgeist, almost as a neccessary condition...

- Almost all profressionals are slow to use their own expertise for their own work. Why?

!!! Hamming urges us to avoid this when we are great professionals. For my current field - corporate strategy - it may imply carving out dedicated time to think of our own team's strategy...


- Algol was an attempt at improving FORTRAN, in 58-60. 
- LISP began in 62. Used a "simple trick" of self-compiling.
- Please remember, the inventor has a "very limited view" of the invention.
- A good diagram of how CAR and 3 addresses and an operation can be used to "devise any langauge you want".